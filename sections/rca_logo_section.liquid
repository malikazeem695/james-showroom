{{ 'logo-section.css' | asset_url | stylesheet_tag }}
<div class="rca_logo_section">
<div class="left-animate">
        {% render 'left-animate' %}
    </div>
<div class="tw-overflow-hidden" id="logos_section" speed="{{ section.settings.speed }}">
    <div class="logos_section">
      {% for block in section.blocks %}
        <div class="logo_wrapper">
            {% if block.settings.link != blank %}
                <a href="{{ block.settings.link }}" style="background: url({{ block.settings.logo | img_url: 'original' }}) #FBFDFFFC 50% / cover no-repeat;">
            {% endif %}
        
          {% if block.settings.link != blank %}
          </a>
        {% endif %}
          
        </div>
      {% endfor %}
    </div>
    </div>
    <div class="right-animate">
        {% render 'right-animate' %}
    </div>
    </div>
    <script type="text/javascript" src="{{ 'gsap.min.js' | asset_url }}" defer="defer"></script>
    {% schema %}
    {
      "name": "Logo Blocks",
      "max_blocks": 30,
      "settings": [
        {
        "type": "range",
        "id": "speed",
        "min": 5,
        "max": 100,
        "step": 1,
        "unit": "s",
        "label": "Speed of Rotation",
        "default": 10
      }
      ],
      "blocks": [
        {
          "type": "custom-block",
          "name": "Custom Block",
          "settings": [
            {
              "type": "image_picker",
              "id": "logo",
              "label": "Logo Image"
            },
            {
              "type": "url",
              "id": "link",
              "label": "Link"
            }
          ]
        }
      ],
      "presets": [
        {
          "name": "Logo Blocks"
        }
      ]
    }
    {% endschema %}
    <script>

      document.addEventListener('DOMContentLoaded', function() {
      var logo_element = document.getElementById('logos_section');
var logo_element_speed = logo_element.getAttribute('speed');
      const reversedLogos = document.querySelectorAll('.logos_section .logo_wrapper');
      gsap.set(reversedLogos, { autoAlpha: 1 })

reversedLogos.forEach((logo, i) => {
gsap.set(logo, { xPercent: 100 * i });
});

if (reversedLogos.length > 3) {
const reversedLogosWrap = gsap.utils.wrap(((reversedLogos.length - 1) * 100), -100);
const reversedDuration = logo_element_speed;

gsap.to(reversedLogos, {
    xPercent: `-=${reversedLogos.length * 100}`,
    duration: reversedDuration,
    repeat: -1,
    ease: 'none',
    modifiers: {
    xPercent: xPercent => reversedLogosWrap(parseFloat(xPercent))
    }
});
}
  });
  </script>
    